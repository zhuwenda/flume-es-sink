morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : morphline1

    # Import all morphline commands in these java packages and their
    # subpackages. Other commands that may be present on the classpath are
    # not visible to this morphline.
    importCommands : ["org.kitesdk.**", "org.apache.solr.**", "com.tset.**"]

    commands : [
        {
                logDebug { format : "---- 1 ---- my record: {}", args : ["@{}"] }
        }

        {
            removeFields {
              blacklist : ["literal:timestamp"]
            }
        }

        {
                logDebug { format : "---- 1.2 ---- my record: {}", args : ["@{}"] }
        }

        {
              readClob {
                charset : UTF-8
              }
        }

        {
            logDebug { format : "---- 2 ---- my record: {}", args : ["@{}"] }
        }

        {
            grok {
		        dictionaryFiles : [/opt/flume/grok-dictionaries]
              expressions : {
                message : """%{NGINX}"""
              }
              numRequiredMatches : all
            }
        }


        {
            logDebug { format : "**** 3 **** my record: {}", args : ["@{}"] }
        }


        {
            convertTimestamp {
              field : timestamp
              inputFormats : ["dd/MMM/yyyy:HH:mm:ss Z"]
              inputLocale : "en"
              outputFormat : "yyyy-MM-dd'T'HH:mm:ssZZ"
            }
        }


        {
            logDebug { format : "**** 4 **** my record: {}", args : ["@{}"] }
        }


        {
            userAgent {
              inputField : agent
              outputFields : {
                ua_family : "@{ua_family}"
                device_family : "@{device_family}"
                ua_family_and_version : "@{ua_family}/@{ua_major}.@{ua_minor}.@{ua_patch}"
                os_family : "@{os_family}"
                os_family_and_version : "@{os_family} @{os_major}.@{os_minor}.@{os_patch}"
              }
            }
        }

         {
            logDebug { format : "**** 5 **** my record: {}", args : ["@{}"] }
         }


          {
             geoIP {
               inputField : clientip
               database : "/opt/flume/GeoLite2-City/GeoLite2-City.mmdb"
             }
          }

          {
              extractJsonPaths {
                flatten : false
                paths : {
                  location : /location/latitude_longitude
                }
              }
          }


        {
            removeFields {
              blacklist : ["literal:_attachment_body"]
            }
        }


         {
            logDebug { format : "**** 6 **** my record: {}", args : ["@{}"] }
         }


    ]
  }
]